package ncg.everdark.global;

import ncg.everdark.dialogue.DialogueTree;
import ncg.everdark.events.Consequence;
import ncg.everdark.gamedata.*;
import ncg.everdark.entities.*;

import java.io.*;
import java.util.Scanner;

public class Config {

	private static final int n = 5;
	private static String[] values = new String[n];
	public static final String MUSIC_PATH;
	public static final String SAVE_PATH;
	public static final int WIDTH;
	public static final int HEIGHT;
	public static final boolean ANSI;
	public static final String VERS = "v0.1.0";
	
	public static final Map MAIN_MENU = new Map("main", "Would you like to load from file? (Y/N): ", null, null, null, 0, 0, 0);
	public static final Map WW;
	public static final Map TWN;
	public static final Map TNO;
	public static final Map TAN;
	public static final Map SHIP;

	static  {
		File f = null;
		Scanner lineScanner = null;
		try {
			f = new File("config.txt");
			lineScanner = new Scanner(f);
			for (int i = 0; i<n; i++) {
				Scanner valueGetter = new Scanner(lineScanner.nextLine());
				valueGetter.useDelimiter(": ");
				valueGetter.next();
				values[i] = valueGetter.next();
			}
		} catch (Exception e) {
			System.out.println("Game Data could not be initialized. Files may be missing or corrupt.");
			System.exit(1);
		}
		WIDTH = Integer.parseInt(values[0]);
		HEIGHT = Integer.parseInt(values[1]);
		SAVE_PATH = values[2];
		MUSIC_PATH = values[3];
		ANSI = (values[4].toLowerCase().charAt(0) == 'y');
		
		int[][] wwTopo = { 
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
							};
						
		Entity[][] wwEnt = new Entity[16][16];
		wwEnt[0][14] = new Frog(1);

		DialogueTree dialogue = new DialogueTree().add("Hello.").add(new int[] {0,1}, "Hello.", "\"Bye.\"")
										.add(new int[] {0,2}, "Who are you?", "\"I am a test of the dialogue routines.\"");
		NPC test = new NPC("Tester", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 'c', 99);
		test.setDialogue(dialogue);
		wwEnt[4][4] = test;

		char[][] wwFeat = {
									{'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '~', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
								};
						
		int[][] twnTopo = { 
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
								};
						
		Entity[][] twnEnt = new Entity[16][16];

		twnEnt[7][3] = new NPC.Maia();
		twnEnt[5][3] = new Human(1);
		twnEnt[11][6] = new NPC.Mathieu();
	
		char[][] twnFeat = {
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', '#', '#', '#', ';', ';', '~', '~', '~'},
									{';', ';', '#', '#', '#', ';', ';', ';', '/', ':', '#', ';', ';', '~', '~', '~'},
									{';', ';', '#', ':', '#', ';', ';', ';', '#', '#', '#', ';', 'T', '~', '~', '~'},
									{';', ';', '#', ':', '/', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', 'T', '#', ':', '#', ';', ';', ';', '#', '#', '#', ';', 'T', '~', '~', '~'},
									{';', ';', '#', '#', '#', ';', ';', ';', '/', ':', '#', ';', ';', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', '#', '#', '#', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', '#', '/', '#', 'T', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', 'T', '#', ':', '#', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', '#', '#', '#', ';', ';', 'T', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
								};
		
		int[][] tnoTopo = { 
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   0,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   0,   -99,  -99,   -99,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   0,   -99,  -99, -99,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      0,   0, -99, -99,  1, -99,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   0,     -99, -99, -99,  1,  1,   1,  -99, -99, -99, -99},
									{1, 1,  1,   1,   1,   1,      1,   1,   1,   1,  1,   1,  -99, -99, -99, -99},//dock
									{1, 1,  1,   1,   1,   1,      1,   1,   1,   1,  1,   1,  -99, -99, -99, -99},//dock
									{1, 1, -99, -99, -99, -99,   -99, -99, -99, -99, -99, -99, -99, -99, -99, -99},
									{1, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99},
								};
		
		char[][] tnoFeat = {
									{'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', 'T', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '~', '~', '~', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '^', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', 'T', '~', '~', '~', '~', '/', '*', '\\', '~', '~', '~', '~'},
									{';', ';', ';', ';', '=', '=', '=', '=', '=', '[', '*', ']', '~', '~', '~', '~'},
									{';', ';', ';', '=', '=', '=', '=', '=', '=', '[', '*', ']', '~', '~', '~', '~'},
									{';', 'T', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~'},
									{';', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~'},
								};
		
		Entity[][] tnoEnt = new Entity[16][16];
		
		int[][] tanTopo = {
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, 1, 1, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, 1, 1, 1, 1,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},//dock
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},//dock
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, 1, 1, 1, 1,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99, -99, },
						};
		
		char[][] tanFeat = { 
									{'#', '#', '#', '#', 'T', ';', ';', 'T', ';', ';', ';', ';', '~', '~', '~', '~',},
									{'#', ':', ':', '#', ';', ';', 'T', ';', ';', ';', ';', '~', '~', '~', '~', '~',},
									{'#', ':', ':', '\\', '=', '=', '=', ';', ';', ';', '~', '~', '~', '~', '~', '~',},
									{'#', ':', ':', '/', '=', '=', '=', ';', ';', ';', '~', '~', '~', '~', '~', '~',},
									{'#', ':', ':', '#', ';', '=', '=', ';', ';', ';', '~', '~', '~', '~', '~', '~',},
									{'#', '#', '#', '#', ';', '=', '=', ';', 'T', ';', '~', '~', '~', '^', '~', '~',},
									{'#', ':', ':', '#', ';', '=', '=', ';', ';', '~', '~', '~', '/', '*', '\\', '~',},
									{'#', ':', ':', '/', ';', '=', '=', ';', '~', '~', '~', '/', '*', '*', '*', '\\',},
									{'#', '#', '#', '#', ';', '=', '=', '=', '=', '=', '=', '[', '>', '>', '>', ']',},
									{'T', ';', ';', ';', ';', '=', '=', '=', '=', '=', '=', '[', '>', '>', '>', ']', },
									{';', ';', 'T', ';', ';', '=', '=', ';', '~', '~', '~', '[', '_', '_', '_', ']',},
									{';', ';', ';', ';', ';', '=', '=', ';', ';', '~', '~', '~', '~', '~', '~', '~',},
									{'T', ';', ';', 'T', '#', '/', '\\', '#', ';', '~', '~', '~', '~', '~', '~', '~',},
									{';', ';', ';', ';', '#', ':', ':', '#', ';', '~', '~', '~', '~', '~', '~', '~',},
									{';', 'T', ';', ';', '#', ':', ':', '#', '~', '~', '~', '~', '~', '~', '~', '~',},
									{';', ';', ';', 'T', '#', '#', '#', '#', '~', '~', '~', '~', '~', '~', '~', '~', },
						 		 };
						
		Entity[][] tanEnt = new Entity[16][16];

		tanEnt[1][1] = new NPC.Pirate();
		tanEnt[4][2] = new NPC.Pirate();
		tanEnt[14][5] = new NPC.Pirate();

		
		int[][] shipTopo = {
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
								};

		char[][] shipFeat = {
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
								};

		Entity[][] shipEnt = new Entity[5][5];

		shipEnt[2][4] = new NPC.Captain();

		//important permanent-ish stuff

		String wwDesc = "You find yourself surrounded by forest, lightly illuminated by the full moon overhead.\n" +
		"A light breeze flows between the trees and almost sounds like hushed voices.\n" +
		"Despite the light from the moon, the entire forest looks dull. The trees' hue are desaturated and the whole area feels devoid of life.\n";

		String twnDesc = "A little town on the outskirts of a forest.\n" +
						"The sound of rushing water from a river to the East can be heard, but otherwise it is deadly silent.\n" +
						"It seems oddly devoid of life.\n";

		String tnoDesc = "You stand on a small bit of wild peninsula, near the sea.\n" +
						"In the distance you can see an old ship floating in the bay.\n" +
						"The ship's sails are tattered and it seems to be in a state of disrepair.\n" +
						"Further to the south you can hear the light bustle of voices and song.\n";

		String tanDesc = "The salty win blows through a port town on the shore.\n" +
						"Much more lively than the little village to the North.\n" +
						"You can hear music and chatter. The people here seem to be thriving.\n";

		String shipDesc = "The floorboards creek as you step into the cabin of the ship.\n" +
								"The air is damp and smells of mildew and alcohol.\n";

		WW =  new Map("whispering woods", wwDesc, wwTopo, wwFeat, wwEnt, 16, 16, 2);
		TWN = new Map("town", twnDesc, twnTopo, twnFeat, twnEnt, 16, 16, 1);
		TNO = new Map("wilderness", tnoDesc, tnoTopo, tnoFeat, tnoEnt, 16, 16, 3);
		TAN = new Map("taniere", tanDesc, tanTopo, tanFeat, tanEnt, 16, 16, 2);
		SHIP = new Map("ship", shipDesc, shipTopo, shipFeat, shipEnt, 5, 5, 2);

		for (int i = 0; i < 16; i++) {
			WW.addLink(TWN, 15, (i%13), 1, (i%13));
			TWN.addLink(WW, 0, (i%13), 14, (i%13));
			TWN.addLink(TNO, 15, (i%10), 1, (i%10));
			TNO.addLink(TWN, 0, (i%10), 14, (i%10));
		}
		TNO.addLink(TAN, 15, 0, 0, 10); 
		TAN.addLink(TNO, 0, 11, 14, 0);
		TAN.addLink(SHIP, 8, 13, 2, 0);
		SHIP.addLink(TAN, 2, 2, 8, 12);
	}

}
