package ncg.everdark.gamedata;

import ncg.everdark.dialogue.DialogueTree;
import ncg.everdark.events.Consequence;
import ncg.everdark.entities.*;

import java.util.Scanner;

public class GameBuilder {//this is ONLY to be used for development so i can construct the .game file quickly, should be removed for releases
	public static void buildGame()  {
		Map MAIN_MENU = new Map("main", "Would you like to load from file? (Y/N): ", null, null, 0, 0, 0);
		Map STARTING_LOCATION;
		Map TWN;
		Map TNO;
		Map TAN;
		Map SHIP;

		//System.out.println("Generating maps...");//-------------------------------------------------------------------------------------------------
		int[][] wwTopo = { 
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
								{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
							};
						
		char[][] wwFeat = {
									{'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '@', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', '@', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '@'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '@', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', ';', '@', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '@', '~'},
								};
						
		int[][] twnTopo = { 
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},
								};
						
		char[][] twnFeat = {
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', '#', '#', '#', ';', ';', '~', '~', '~'},
									{';', ';', '#', '#', '#', ';', ';', ';', '/', ':', '#', ';', ';', '~', '~', '~'},
									{';', ';', '#', ':', '#', ';', ';', ';', '#', '#', '#', ';', 'T', '~', '~', '~'},
									{';', ';', '#', ':', '/', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', 'T', '#', ':', '#', ';', ';', ';', '#', '#', '#', ';', 'T', '~', '~', '~'},
									{';', ';', '#', '#', '#', ';', ';', ';', '/', ':', '#', ';', ';', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', '#', '#', '#', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', '#', '/', '#', 'T', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', 'T', '#', ':', '#', ';', ';', ';', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', '#', '#', '#', ';', ';', 'T', ';', ';', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', 'T', ';', ';', ';', ';', ';', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
								};
		
		int[][] tnoTopo = { 
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   1,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   1,   0,  0,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   1,   0,   -99,  -99,   -99,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      1,   0,   -99,  -99, -99,   0,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   1,      0,   0, -99, -99,  1, -99,   0,  -99, -99, -99},
									{1, 1, 1,    1,   1,   0,     -99, -99, -99,  1,  1,   1,  -99, -99, -99, -99},
									{1, 1,  1,   1,   1,   1,      1,   1,   1,   1,  1,   1,  -99, -99, -99, -99},//dock
									{1, 1,  1,   1,   1,   1,      1,   1,   1,   1,  1,   1,  -99, -99, -99, -99},//dock
									{1, 1, -99, -99, -99, -99,   -99, -99, -99, -99, -99, -99, -99, -99, -99, -99},
									{1, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99},
								};
		
		char[][] tnoFeat = {
									{'T', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', 'T', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', ';', ';', '~', '~', '~', '~', '~', '~'},
									{';', 'T', ';', ';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', ';', 'T', '~', '~', '~', '~', '~', '~', '~', '~'},
									{';', ';', 'T', ';', ';', ';', ';', '~', '~', '~', '~', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', ';', ';', '~', '~', '~', '~', '^', '~', '~', '~', '~', '~'},
									{';', ';', ';', ';', 'T', '~', '~', '~', '~', '/', '*', '\\', '~', '~', '~', '~'},
									{';', ';', ';', ';', '=', '=', '=', '=', '=', '[', '*', ']', '~', '~', '~', '~'},
									{';', ';', ';', '=', '=', '=', '=', '=', '=', '[', '*', ']', '~', '~', '~', '~'},
									{';', 'T', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~'},
									{';', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~', '~'},
								};
		
		int[][] tanTopo = {
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, 1, 1, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, 1, 1, 1, 1,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},//dock
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},//dock
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, 1, 1, 1, 1, 1,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99, -99,},
									{1, 1, 1, 1, 1, 1, 1, 1, 1, -99, -99, -99, -99, -99, -99, -99, },
						};
		
		char[][] tanFeat = { 
									{'#', '#', '#', '#', 'T', ';', ';', 'T', ';', ';', ';', ';', '~', '~', '~', '~',},
									{'#', ':', ':', '#', ';', ';', 'T', ';', ';', ';', ';', '~', '~', '~', '~', '~',},
									{'#', ':', ':', '\\', '=', '=', '=', ';', ';', ';', '~', '~', '~', '~', '~', '~',},
									{'#', ':', ':', '/', '=', '=', '=', ';', ';', ';', '~', '~', '~', '~', '~', '~',},
									{'#', ':', ':', '#', ';', '=', '=', ';', ';', ';', '~', '~', '~', '~', '~', '~',},
									{'#', '#', '#', '#', ';', '=', '=', ';', 'T', ';', '~', '~', '~', '^', '~', '~',},
									{'#', ':', ':', '#', ';', '=', '=', ';', ';', '~', '~', '~', '/', '*', '\\', '~',},
									{'#', ':', ':', '/', ';', '=', '=', ';', '~', '~', '~', '/', '*', '*', '*', '\\',},
									{'#', '#', '#', '#', ';', '=', '=', '=', '=', '=', '=', '[', '>', '>', '>', ']',},
									{'T', ';', ';', ';', ';', '=', '=', '=', '=', '=', '=', '[', '>', '>', '>', ']', },
									{';', ';', 'T', ';', ';', '=', '=', ';', '~', '~', '~', '[', '_', '_', '_', ']',},
									{';', ';', ';', ';', ';', '=', '=', ';', ';', '~', '~', '~', '~', '~', '~', '~',},
									{'T', ';', ';', 'T', '#', '/', '\\', '#', ';', '~', '~', '~', '~', '~', '~', '~',},
									{';', ';', ';', ';', '#', ':', ':', '#', ';', '~', '~', '~', '~', '~', '~', '~',},
									{';', 'T', ';', ';', '#', ':', ':', '#', '~', '~', '~', '~', '~', '~', '~', '~',},
									{';', ';', ';', 'T', '#', '#', '#', '#', '~', '~', '~', '~', '~', '~', '~', '~', },
						 		 };
						
		int[][] shipTopo = {
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
									{-1, -1, -1, -1, -1},
								};

		char[][] shipFeat = {
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
									{'=', '=', '=', '=', '='},
								};

		//System.out.println("Writing descriptions...");//--------------------------------------------------------------------------------
		String wwDesc = "You find yourself surrounded by forest, lightly illuminated by the full moon overhead.\n" +
		"A light breeze flows between the trees and almost sounds like hushed voices.\n" +
		"Despite the light from the moon, the entire forest looks dull. The trees' hue are desaturated and the whole area feels devoid of life.\n";

		String twnDesc = "A little town on the outskirts of a forest.\n" +
						"The sound of rushing water from a river to the East can be heard, but otherwise it is deadly silent.\n" +
						"It seems oddly devoid of life.\n";

		String tnoDesc = "You stand on a small bit of wild peninsula, near the sea.\n" +
						"In the distance you can see an old ship floating in the bay.\n" +
						"The ship's sails are tattered and it seems to be in a state of disrepair.\n" +
						"Further to the south you can hear the light bustle of voices and song.\n";

		String tanDesc = "The salty win blows through a port town on the shore.\n" +
						"Much more lively than the little village to the North.\n" +
						"You can hear music and chatter. The people here seem to be thriving.\n";

		String shipDesc = "The floorboards creek as you step into the cabin of the ship.\n" +
								"The air is damp and smells of mildew and alcohol.\n";

		//System.out.println("Finalizing maps...");//-------------------------------------------------------------------------------
		STARTING_LOCATION =  new Map("whispering woods", wwDesc, wwTopo, wwFeat, 16, 16, 2);
		TWN = new Map("town", twnDesc, twnTopo, twnFeat, 16, 16, 1);
		TNO = new Map("wilderness", tnoDesc, tnoTopo, tnoFeat, 16, 16, 3);
		TAN = new Map("taniere", tanDesc, tanTopo, tanFeat, 16, 16, 2);
		SHIP = new Map("ship", shipDesc, shipTopo, shipFeat, 5, 5, 2);

		//System.out.println("Spawning Entities...");//--------------------------------------------------------------------------------------
		STARTING_LOCATION.spawnEntity(new Frog(1), 0, 14);

		TWN.spawnEntity(NPC.ELE, 5, 3);
		TWN.spawnEntity(NPC.MAIA, 7, 3);
		TWN.spawnEntity(NPC.OLIVER, 6, 7);
		TWN.spawnEntity(NPC.MATHIEU, 11, 6);

		TAN.spawnEntity(new Pirate(3), 6, 6);
		TAN.spawnEntity(new Pirate(2), 1, 1);
		TAN.spawnEntity(new Pirate(2), 3, 1);
		TAN.spawnEntity(new Pirate(3), 4, 2);
		TAN.spawnEntity(new Pirate(2), 6, 2);
		TAN.spawnEntity(new Pirate(3), 14, 5);

		SHIP.spawnEntity(NPC.CAPTAIN, 2, 4);

		//System.out.println("Adding links...");//-------------------------------------------------------------------------------

		for (int i = 0; i < 16; i++) {
			STARTING_LOCATION.addLink(TWN, 15, (i%13), 1, (i%13));
			TWN.addLink(STARTING_LOCATION, 0, (i%13), 14, (i%13));
			TWN.addLink(TNO, 15, (i%10), 1, (i%10));
			TNO.addLink(TWN, 0, (i%10), 14, (i%10));
		}
		TNO.addLink(TAN, 15, 0, 0, 10); 
		TAN.addLink(TNO, 0, 11, 14, 0);
		TAN.addLink(SHIP, 8, 13, 2, 0);
		SHIP.addLink(TAN, 2, 2, 8, 12);
		try {
			System.out.println("Building game...");
			new GameState.GameData(MAIN_MENU, STARTING_LOCATION, 6, 6).save("global/EverDark");
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(-1);
		}
	}
}
